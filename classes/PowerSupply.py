#!/usr/bin/env python3import pathlibimport jsonfrom os import popen as execups_login = []ups_devices = []ups_data_to_collect = []current_ups_data = []ups_friendly_names = []path = str(pathlib.Path(__file__).parent.parent.absolute()) + '/resources/ups.json'def loadJson():    if len(ups_devices) == 0:        print("Loading {0}".format(path))        with open(path) as jsonFile:            ups_data = json.load(jsonFile)            for ups in ups_data:                ups_devices.append(ups['device'])                ups_login.append(ups['ups_login'])                ups_data_to_collect.append(ups['data_to_collect'])                ups_friendly_names.append(ups['friendly_name'])def get_data_from_ups(ref):    """    Collects data from all the ups' in ups.json    :return:    """    loadJson()    for connection in ups_login:        curr_index = ups_login.index(connection)        curr_device = ups_devices[curr_index]        curr_collection = ups_data_to_collect[curr_index]        curr_friendly_name = ups_friendly_names[curr_index]        current_data = {}        current_data[curr_friendly_name] = {}        curr_data = current_data[curr_friendly_name]        for data in curr_collection:            command = "ssh {0} 'upsc {1} {2} 2>/dev/null'".format(connection, curr_device, data)            output = exec(command).read().strip()            data_to_append = ""            if data == "battery.charge":                data_to_append = "current_charge"            elif data == "battery.runtime":                data_to_append = "runtime"            elif data == "battery.runtime.low":                data_to_append = "runtime_low"            elif data == "ups.load":                data_to_append = "current_load"            elif data == "ups.status":                data_to_append = "current_status"                if output == "OL":                    output = "online"                if output == "OL CHRG":                    output = "charging"                if output == "OB DISCHRG":                    output = "discharging"            try:                curr_data[data_to_append] = int(output)            except:                curr_data[data_to_append] = output        ref.update(current_data)